<?php

/**
 * BaseFee
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $activity_id
 * @property string $name
 * @property string $explanation
 * @property integer $fee_type_id
 * @property integer $fee_group_id
 * @property double $price
 * @property integer $amount
 * @property integer $amount_order
 * @property Activity $Activity
 * @property FeeGroup $FeeGroup
 * @property Doctrine_Collection $Payment
 * 
 * @method integer             getActivityId()   Returns the current record's "activity_id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method string              getExplanation()  Returns the current record's "explanation" value
 * @method integer             getFeeTypeId()    Returns the current record's "fee_type_id" value
 * @method integer             getFeeGroupId()   Returns the current record's "fee_group_id" value
 * @method double              getPrice()        Returns the current record's "price" value
 * @method integer             getAmount()       Returns the current record's "amount" value
 * @method integer             getAmountOrder()  Returns the current record's "amount_order" value
 * @method Activity            getActivity()     Returns the current record's "Activity" value
 * @method FeeGroup            getFeeGroup()     Returns the current record's "FeeGroup" value
 * @method Doctrine_Collection getPayment()      Returns the current record's "Payment" collection
 * @method Fee                 setActivityId()   Sets the current record's "activity_id" value
 * @method Fee                 setName()         Sets the current record's "name" value
 * @method Fee                 setExplanation()  Sets the current record's "explanation" value
 * @method Fee                 setFeeTypeId()    Sets the current record's "fee_type_id" value
 * @method Fee                 setFeeGroupId()   Sets the current record's "fee_group_id" value
 * @method Fee                 setPrice()        Sets the current record's "price" value
 * @method Fee                 setAmount()       Sets the current record's "amount" value
 * @method Fee                 setAmountOrder()  Sets the current record's "amount_order" value
 * @method Fee                 setActivity()     Sets the current record's "Activity" value
 * @method Fee                 setFeeGroup()     Sets the current record's "FeeGroup" value
 * @method Fee                 setPayment()      Sets the current record's "Payment" collection
 * 
 * @package    haimeeAct
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFee extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fee');
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 2550, array(
             'type' => 'string',
             'length' => 2550,
             ));
        $this->hasColumn('explanation', 'string', 2550, array(
             'type' => 'string',
             'length' => 2550,
             ));
        $this->hasColumn('fee_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('fee_group_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('price', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('amount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('amount_order', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Activity', array(
             'local' => 'activity_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('FeeGroup', array(
             'local' => 'fee_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'fee_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}