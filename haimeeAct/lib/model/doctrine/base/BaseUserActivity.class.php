<?php

/**
 * BaseUserActivity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $activity_id
 * @property integer $type
 * @property string $user_first_name
 * @property string $user_last_name
 * @property string $user_email_address
 * @property string $user_phone
 * @property integer $amount
 * @property integer $pay_type
 * @property timestamp $enter_time
 * @property timestamp $quit_time
 * @property string $note
 * @property sfGuardUser $User
 * @property Activity $Activity
 * @property PaymentType $PaymentType
 * @property Doctrine_Collection $Payments
 * 
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method integer             getActivityId()         Returns the current record's "activity_id" value
 * @method integer             getType()               Returns the current record's "type" value
 * @method string              getUserFirstName()      Returns the current record's "user_first_name" value
 * @method string              getUserLastName()       Returns the current record's "user_last_name" value
 * @method string              getUserEmailAddress()   Returns the current record's "user_email_address" value
 * @method string              getUserPhone()          Returns the current record's "user_phone" value
 * @method integer             getAmount()             Returns the current record's "amount" value
 * @method integer             getPayType()            Returns the current record's "pay_type" value
 * @method timestamp           getEnterTime()          Returns the current record's "enter_time" value
 * @method timestamp           getQuitTime()           Returns the current record's "quit_time" value
 * @method string              getNote()               Returns the current record's "note" value
 * @method sfGuardUser         getUser()               Returns the current record's "User" value
 * @method Activity            getActivity()           Returns the current record's "Activity" value
 * @method PaymentType         getPaymentType()        Returns the current record's "PaymentType" value
 * @method Doctrine_Collection getPayments()           Returns the current record's "Payments" collection
 * @method UserActivity        setUserId()             Sets the current record's "user_id" value
 * @method UserActivity        setActivityId()         Sets the current record's "activity_id" value
 * @method UserActivity        setType()               Sets the current record's "type" value
 * @method UserActivity        setUserFirstName()      Sets the current record's "user_first_name" value
 * @method UserActivity        setUserLastName()       Sets the current record's "user_last_name" value
 * @method UserActivity        setUserEmailAddress()   Sets the current record's "user_email_address" value
 * @method UserActivity        setUserPhone()          Sets the current record's "user_phone" value
 * @method UserActivity        setAmount()             Sets the current record's "amount" value
 * @method UserActivity        setPayType()            Sets the current record's "pay_type" value
 * @method UserActivity        setEnterTime()          Sets the current record's "enter_time" value
 * @method UserActivity        setQuitTime()           Sets the current record's "quit_time" value
 * @method UserActivity        setNote()               Sets the current record's "note" value
 * @method UserActivity        setUser()               Sets the current record's "User" value
 * @method UserActivity        setActivity()           Sets the current record's "Activity" value
 * @method UserActivity        setPaymentType()        Sets the current record's "PaymentType" value
 * @method UserActivity        setPayments()           Sets the current record's "Payments" collection
 * 
 * @package    haimeeAct
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserActivity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_activity');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_email_address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_phone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
		$this->hasColumn('location', 'string', 2550, array(
             'type' => 'string',
             'length' => 2550,
             ));
        $this->hasColumn('amount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('pay_type', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('enter_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('quit_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('note', 'string', 2550, array(
             'type' => 'string',
             'length' => 2550,
             ));
		$this->hasColumn('rating', 'integer', null, array(
             'type' => 'integer',
             ));
		$this->hasColumn('paid', 'integer', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Activity', array(
             'local' => 'activity_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PaymentType', array(
             'local' => 'pay_type',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Payment as Payments', array(
             'local' => 'id',
             'foreign' => 'user_activity_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}